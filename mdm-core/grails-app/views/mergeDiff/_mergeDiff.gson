import uk.ac.ox.softeng.maurodatamapper.core.diff.tridirectional.MergeDiff
import uk.ac.ox.softeng.maurodatamapper.core.facet.Metadata
import uk.ac.ox.softeng.maurodatamapper.core.model.ModelItem
import uk.ac.ox.softeng.maurodatamapper.core.traits.domain.InformationAware

model {
    MergeDiff mergeDiff
}

json {

    sourceId mergeDiff.getSourceId()
    targetId mergeDiff.getTargetId()

    if (mergeDiff.getTarget() instanceof InformationAware) {
        label(((InformationAware) mergeDiff.getTarget()).getLabel())
    }

    if (mergeDiff.getTarget() instanceof Metadata) {
        namespace(((Metadata) mergeDiff.getTarget()).getNamespace())
        key(((Metadata) mergeDiff.getTarget()).getKey())
    }

    if (mergeDiff.getTarget() instanceof ModelItem && mergeDiff.getSource() instanceof ModelItem) {
        ModelItem source = mergeDiff.getTarget() as ModelItem
        ModelItem target = mergeDiff.getTarget() as ModelItem
        sourceBreadcrumbs g.render(source.getBreadcrumbs())
        targetBreadcrumbs g.render(target.getBreadcrumbs())
    }

    count mergeDiff.getNumberOfDiffs()
    diffs g.render(mergeDiff.getDiffs())
}
