import uk.ac.ox.softeng.maurodatamapper.core.diff.bidirectional.ObjectDiff
import uk.ac.ox.softeng.maurodatamapper.core.facet.Metadata
import uk.ac.ox.softeng.maurodatamapper.core.model.ModelItem
import uk.ac.ox.softeng.maurodatamapper.core.traits.domain.InformationAware

model {
    ObjectDiff objectDiff
}


json {

    leftId objectDiff.getLeftId()
    rightId objectDiff.getRightId()
    if (objectDiff.getLeft() instanceof InformationAware) {
        label(((InformationAware) objectDiff.getLeft()).getLabel())
    }

    if (objectDiff.getLeft() instanceof Metadata) {
        namespace(((Metadata) objectDiff.getLeft()).getNamespace())
        key(((Metadata) objectDiff.getLeft()).getKey())
    }

    if (objectDiff.getLeft() instanceof ModelItem && objectDiff.getRight() instanceof ModelItem) {
        ModelItem left = objectDiff.getLeft() as ModelItem
        ModelItem right = objectDiff.getRight() as ModelItem
        leftBreadcrumbs g.render(left.getBreadcrumbs())
        rightBreadcrumbs g.render(right.getBreadcrumbs())
    }

    count objectDiff.getNumberOfDiffs()
    diffs g.render(objectDiff.getDiffs())


}
